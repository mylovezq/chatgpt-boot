#============================#
# server 配置
#============================#
server:
  port: 82
  max-http-header-size: 10240
  servlet:
    context-path: /chatgpt/v1

#============================#
# spring 配置
#============================#
spring:
  application:
    # 应用名
    name: chatgpt
  profiles:
    active: @spring.active@
  servlet:
    multipart:
      max-request-size: 100MB
      max-file-size: 100MB
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss.SSS
    locale: zh_CN
    serialization:
      # 格式化输出
      indent_output: false
  main:
    allow-circular-references: true

  redis:
    ##redis 单机环境配置
    host: 192.168.1.20
    port: 6379
    password: mylovezq
    database: 0


#============================#
# mybatisplus 配置
#============================#
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: true
    lazy-loading-enabled: true
    multiple-result-sets-enabled: true
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl
  global-config:
    banner: false
    db-config:
      id-type: assign_id
      table-underline: true
    enable-sql-runner: true
      #数据库类型
    db-type: MYSQL
  configuration-properties:
    prefix:
    #如果数据库为postgresql，则需要配置为blobType: BINARY
    blobType: BLOB
    #如果数据库为oracle或mssql，则需要配置为boolValue: 1
    boolValue: true

#============================#
# logging 配置
#============================#
logging:
  level:
    root: info
  file:
    path: /logs/${spring.application.name}/
    name: ${spring.application.name}


#============================#
# OpenAI 配置
#============================#
openai:
  apikey: xxxx
  baseUrl: https://api.openai.com/v1/
  timeout: 20 # 20
# Sa-Token配置
sa-token:
  jwt-secret-key: mylovezq
  # token名称 (同时也是cookie名称)
  token-name: Access-Token
  # token有效期 设为30天 (必定过期) 单位: 秒
  timeout: 2592000
  # token临时有效期 (指定时间无操作就过期) 单位: 秒
  active-timeout: 86400
  # 开启内网服务调用鉴权
  check-id-token: true
  # Id-Token的有效期 (单位: 秒)
  id-token-timeout: 600
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: true
  # 是否尝试从header里读取token
  is-read-head: true
  # 是否尝试从cookie里读取token
  is-read-cookie: false
  # token前缀
  token-prefix: ""
  #token风格
  token-style: jwt
  #是否在初始化配置时打印版本字符画
  isPrint: false
  # 是否输出操作日志
  is-log: false
